ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿ ²±° Release Notes °±² ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿ 
 ³                        ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ                          ³ 
 ³                                                                           ³ 
 ³ [Product Information]                                                     ³ 
 ³                                                                           ³ 
 ³   Aspect-oriented programming (AOP) is a revolutionary new way to think   ³ 
 ³   about software engineering. AOP was introduced to address crosscutting  ³ 
 ³   concerns such as security, logging, persistence, debugging, tracing,    ³ 
 ³   distribution, performance monitoring, and exception handling in a more  ³ 
 ³   effective manner. Unlike conventional development techniques, which     ³ 
 ³   scatter the implementation of each concern into multiple classes,       ³ 
 ³   aspect-oriented programming localizes them.                             ³ 
 ³                                                                           ³ 
 ³   Aspect-oriented software development (AOSD) uses this approach to       ³ 
 ³   create a better modularity for functional and nonfunctional             ³ 
 ³   requirements, platform specifics, and more, allowing you to build more  ³ 
 ³   understandable systems that are easier to configure and extend to meet  ³ 
 ³   the evolving needs of stakeholders.                                     ³ 
 ³                                                                           ³ 
 ³   In this highly anticipated new book, Ivar Jacobson and Pan-Wei Ng       ³ 
 ³   demonstrate how to apply use cases?a mature and systematic approach to  ³ 
 ³   focusing on stakeholder concerns?and aspect-orientation in building     ³ 
 ³   robust and extensible systems. Throughout the book, the authors employ  ³ 
 ³   a single, real-world example of a hotel management information system   ³ 
 ³   to make the described theories and practices concrete and               ³ 
 ³   understandable.                                                         ³ 
 ³                                                                           ³ 
 ³   The authors show how to identify, design, implement, test, and          ³ 
 ³   refactor use-case modules, as well as extend them. They also            ³ 
 ³   demonstrate how to design use-case modules with the Unified Modeling    ³ 
 ³   Language (UML)?emphasizing enhancements made in UML 2.0?and how to      ³ 
 ³   achieve use-case modularity using aspect technologies, notably          ³ 
 ³   AspectJ.                                                                ³ 
 ³                                                                           ³ 
 ³                                                                           ³ 
 ³ [Install Information]                                                     ³ 
 ³                                                                           ³ 
 ³   Unpack it !                                                             ³ 
 ³   Enjoy this fine release from TEAM LiB ~_* !                             ³ 
 ³                                                                           ³ 
 ³ [For more information]                                                    ³ 
 ³                                                                           ³ 
 ³   http://www.amazon.com/exec/obidos/ASIN/0321268881                       ³ 
 ³                                                                           ³ 
 ³                                                                           ³ 
 ÀÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ
